/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { Box, MeshReflectorMaterial, Plane, useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Cylinder: THREE.Mesh
    Cylinder001: THREE.Mesh
    Plane: THREE.Mesh
    Cube009: THREE.Mesh
    Cube009_1: THREE.Mesh
    Cube010: THREE.Mesh
    Cube010_1: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Lounge Chair1 Material']: THREE.MeshStandardMaterial
    ['Lounge Chair1 Details']: THREE.MeshStandardMaterial
    ['Lounge Chair1 Material.001']: THREE.MeshStandardMaterial
    ['Lounge Chair1 Details.001']: THREE.MeshStandardMaterial
  }
}

export default function EmptyRoom({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null!)
  const { nodes, materials } = useGLTF('/creux/empty_room.gltf') as GLTFResult
  const texture = useTexture('/cube2.png')
  return (
    <group ref={group} {...props} dispose={null}>
      <pointLight position={[1, 1, 2]} intensity={0.04} />
   
      <Box args={[0.3,0.3,0.3]} position={[1, 3, -5]} />
      <Plane args={[7.5, 15]} position={[0, 0.04, 0]} rotation={[-Math.PI/2, 0, 0]}>
      <MeshReflectorMaterial
            blur={[300, 100]}
            resolution={2048}
            mixBlur={1}
            mixStrength={400}
            roughness={1}
            depthScale={1.2}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.4}
            color="#232323"
            metalness={0.5}
            mirror={0}
        />
      </Plane>
      <mesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials['Material.001']} />
      <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials['Material.001']} />
      <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials['Material.001']} />
      <mesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials['Material.001']} />
      <mesh name="Cube005" geometry={nodes.Cube005.geometry} material={materials['Material.001']} />
      <mesh name="Cube006" geometry={nodes.Cube006.geometry} material={materials['Material.001']} />
      <mesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials['Material.001']} />
      <mesh name="Cube008" geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} />
      <mesh name="Cylinder" geometry={nodes.Cylinder.geometry} material={materials['Material.003']} />
      <mesh name="Cylinder001" geometry={nodes.Cylinder001.geometry} material={materials['Material.003']} />
      <mesh name="Plane" geometry={nodes.Plane.geometry}>
        <meshBasicMaterial  map={texture} />
      </mesh> 
      <mesh name="Cube009" geometry={nodes.Cube009.geometry} material={materials['Lounge Chair1 Material']} />
      <mesh name="Cube009_1" geometry={nodes.Cube009_1.geometry} material={materials['Lounge Chair1 Details']} />
      <mesh name="Cube010" geometry={nodes.Cube010.geometry} material={materials['Lounge Chair1 Material.001']} />
      <mesh name="Cube010_1" geometry={nodes.Cube010_1.geometry} material={materials['Lounge Chair1 Details.001']} />
    </group>
  )
}

useGLTF.preload('/creux/empty_room.gltf')
